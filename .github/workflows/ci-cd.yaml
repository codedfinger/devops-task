name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Adjust this to your default branch
  pull_request:
    branches:
      - main  # Adjust this to your default branch

jobs:
  terraform:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'tf') || github.event_name == 'pull_request' # Adjust if needed
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0 # Adjust to your Terraform version
      
      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve

  build-and-deploy:
    runs-on: ubuntu-latest
    # needs: terraform
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Build Docker Image
      #   run: |
      #     docker build -t regtech-app:${{ github.sha }} .
      #     echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      #     docker push regtech-app:${{ github.sha }}

      - name: Copy files to EC2
        env:
          EC2_PRIVATE_IP: ${{ secrets.EC2_PRIVATE_IP }} # Set your EC2 instance's private IP as secret
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }} # Set your SSH private key as a secret
          SSH_USER: "ec2-user" # Adjust if you're using a different user
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }} # Your IAM user access key
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # Your IAM user secret key
          AWS_REGION: "us-east-1" # Replace with your preferred AWS region
        run: |
          echo "$SSH_PRIVATE_KEY" > regtech.pem
          chmod 600 regtech.pem
        
          scp -i regtech.pem -o StrictHostKeyChecking=no deployment/deployment.yaml deployment/service.yaml ec2-user@$EC2_PRIVATE_IP:/home/ec2-user/

      - name: Run Deployment on EC2
        env:
          EC2_PRIVATE_IP: ${{ secrets.EC2_PRIVATE_IP }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_USER: "ec2-user"
        run: |
          echo "$SSH_PRIVATE_KEY" > regtech.pem
          chmod 600 regtech.pem
        
          ssh -i regtech.pem -o StrictHostKeyChecking=no ec2-user@$EC2_PRIVATE_IP << 'EOF'

            # Create AWS config and credentials files
            mkdir -p ~/.aws
            echo "[default]" > ~/.aws/config
            echo "region = $AWS_REGION" >> ~/.aws/config
            echo "[default]" > ~/.aws/credentials
            echo "aws_access_key_id = $AWS_ACCESS_KEY_ID" >> ~/.aws/credentials
            echo "aws_secret_access_key = $AWS_SECRET_ACCESS_KEY" >> ~/.aws/credentials

            kubectl apply -f /home/ec2-user/deployment.yaml --validate=false
            kubectl apply -f /home/ec2-user/service.yaml --validate=false
          EOF
